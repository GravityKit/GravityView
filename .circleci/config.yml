version: 2.1

anchors:
  context: &context
    context: shared

  default_job_config: &default_job_config
    working_directory: /home/circleci/plugin
    machine:
      image: default

  test_job_config: &test_job_config
    <<: *context
    requires:
      - prepare_test_and_build_environment

jobs:
  run_e2e_tests:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run E2E tests
          command: |
            npm run wp-env:configure
            npm run wp-env start
            npm run tests:e2e
      - store_artifacts:
          path: tests/E2E/results
      - store_test_results:
          path: tests/E2E/results

  prepare_test_and_build_environment:
    <<: *default_job_config
    steps:
      - checkout
      - run:
          name: Get GK test/build tools
          command: |
            git clone git@github.com:gravityview/Tooling.git /home/circleci/tooling
      - restore_cache:
          keys:
            - test-dependencies-{{ epoch }}
            - test-dependencies-
      - run:
          name: Install build dependencies
          command: |
            /home/circleci/tooling/build-tools/build_tools.sh npm -o install
            /home/circleci/tooling/build-tools/build_tools.sh composer -o install
      - run:
          name: Configure test environment
          command: |
            /home/circleci/tooling/docker-unit-tests/docker-unit-tests.sh prepare_all
            echo $GH_AUTH_TOKEN > .gh_token
            /home/circleci/tooling/build-tools/build_tools.sh gh -o "auth login --with-token < .gh_token"
            /home/circleci/tooling/build-tools/build_tools.sh gh -o 'release download -R gravityforms/gravityforms --clobber --pattern "*.zip" --dir .tmp'
            unzip .tmp/gravityforms*.zip -d .tmp
            mv .env.sample .env
            sed -i "s|GRAVITY_FORMS_FOLDER=.*|GRAVITY_FORMS_FOLDER=${PWD}/.tmp/gravityforms|" .env
      - save_cache:
          key: test-dependencies-{{ epoch }}
          paths:
            - /home/circleci/test_dependencies
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .

  run_php_74_unit_tests:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run PHP 7.4 unit tests
          command: |
            /home/circleci/tooling/docker-unit-tests/docker-unit-tests.sh test_74

  run_php_80_unit_tests:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run PHP 8.0 unit tests
          command: |
            /home/circleci/tooling/docker-unit-tests/docker-unit-tests.sh test_80

  build_package_release:
    <<: *default_job_config
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Build and package
          command: |
            /home/circleci/tooling/build-tools/build_tools.sh composer -o "install --no-dev"
            /home/circleci/tooling/build-tools/build_tools.sh grunt
            if [ "${CIRCLE_BRANCH}" != "main" ]; then
              /home/circleci/tooling/build-tools/build_tools.sh package_build -o "gravityview gravityview.php --include-hash"
            else
              /home/circleci/tooling/build-tools/build_tools.sh package_build -o "gravityview gravityview.php $([[ $(git log -n 1 | grep "\[skip release\]") ]] && echo --include-hash)"
            fi
            mkdir -p gravityview
            cp -R vendor* gravityview
            rm gravityview/vendor_prefixed/gravitykit/foundation/src/translations.js.php
            zip -gr $(ls gravityview-*.zip) gravityview
            mkdir .release
            cp gravityview-*.zip .release
      - run:
          name: Create a GitHub release
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              git config user.email "support@gravitykit.com"
              git config user.name "GravityView - CI"
              /home/circleci/tooling/build-tools/build_tools.sh create_release -o "gravityview.php $(ls gravityview-*.zip)"
            fi
      - run:
          name: Notify the GK Release Manager
          command: |
            if ! [[ $(git log -n 1 | grep "\[skip notify\]") ]]; then
              /home/circleci/tooling/build-tools/build_tools.sh announce_build -o "gravityview.php $(ls gravityview-*.zip) --with-circle"
            fi
      - store_artifacts:
          path: .release
          destination: release

workflows:
  version: 2
  test_and_package:
    jobs:
      - prepare_test_and_build_environment:
          <<: *context
#      - run_php_74_unit_tests:
#          <<: *test_job_config
#      - run_php_80_unit_tests:
#          <<: *test_job_config
      - run_e2e_tests:
          <<: *test_job_config
      - build_package_release:
          <<: *context
          requires:
#            - run_php_74_unit_tests
#            - run_php_80_unit_tests
            - run_e2e_tests
