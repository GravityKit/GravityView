version: 2.2

anchors:
    context: &context
        context: shared

    default_job_config: &default_job_config
        working_directory: /home/circleci/plugin
        machine:
            image: default
        resource_class: large

    test_job_config: &test_job_config
        <<: *context
        requires:
            - prepare_test_and_build_environment

    composer_cache_keys: &composer_cache_keys
        keys:
            - v2-composer-{{ checksum "composer.lock" }}
            - v2-composer-

    npm_cache_keys: &npm_cache_keys
        keys:
            - v2-npm-{{ checksum "package-lock.json" }}
            - v2-npm-

    tooling_cache_keys: &tooling_cache_keys
        keys:
            - tooling-cache-{{ .Branch }}
            - tooling-cache-

    test_dependencies_cache_keys: &test_dependencies_cache_keys
        keys:
            - test-dependencies-{{ epoch }}
            - test-dependencies-

jobs:
    run_acceptance_tests:
        <<: *default_job_config
        steps:
            - checkout
            -   run:
                    name: Setting up virtual host
                    command: echo 127.0.0.1 wordpress | sudo tee -a /etc/hosts
            -   run:
                    name: Run acceptance tests
                    command: |
                        PLUGIN_DIR=$PLUGIN_DIR docker-compose -f tests/acceptance/docker/docker-compose.yml run codeception --debug -vvv --html --xml
            -   store_artifacts:
                    path: tests/acceptance/_output
            -   store_test_results:
                    path: tests/acceptance/_output

    prepare_test_and_build_environment:
        <<: *default_job_config
        steps:
            - checkout
            # Restore all caches separately
            -   restore_cache:
                    <<: *composer_cache_keys
            -   restore_cache:
                    <<: *npm_cache_keys
            -   restore_cache:
                    <<: *tooling_cache_keys
            -   restore_cache:
                    <<: *test_dependencies_cache_keys
            -   run:
                    name: Getting GV test/build tools
                    command: |
                        set -eo pipefail
                        echo "Checking for cached tooling..."
                        if [[ ! -d "/home/circleci/tooling" ]]; then
                            echo "Cache MISS - Tooling not found, cloning fresh copy..."
                            git clone --depth 1 https://github.com/gravityview/Tooling.git /home/circleci/tooling
                        else
                            echo "Cache HIT - Using cached tooling directory"
                        fi
                    no_output_timeout: 5m
            -   restore_cache:
                    keys:
                        - test-dependencies-{{ epoch }}
                        - test-dependencies-
            -   run:
                    name: Installing build dependencies
                    command: |
                        /home/circleci/tooling/build-tools/build_tools.sh npm -o install
                        /home/circleci/tooling/build-tools/build_tools.sh composer -o install
                    no_output_timeout: 10m
            -   run:
                    name: Configuring tests environment
                    command: |
                        /home/circleci/tooling/docker-unit-tests/docker-unit-tests.sh prepare_all
                    no_output_timeout: 10m
            # Save caches separately
            -   save_cache:
                    key: v2-composer-{{ checksum "composer.lock" }}
                    paths:
                        - vendor
                        - vendor_prefixed
            -   save_cache:
                    key: v2-npm-{{ checksum "package-lock.json" }}
                    paths:
                        - node_modules
            -   save_cache:
                    key: tooling-cache-{{ .Branch }}
                    paths:
                        - /home/circleci/tooling
            -   save_cache:
                    key: test-dependencies-{{ epoch }}
                    paths:
                        - /home/circleci/test_dependencies
            -   persist_to_workspace:
                    root: /home/circleci
                    paths:
                        - .

    run_php_74_unit_tests:
        <<: *default_job_config
        steps:
            -   attach_workspace:
                    at: /home/circleci
            -   run:
                    name: Running PHP 7.4 unit tests
                    command: |
                        /home/circleci/tooling/docker-unit-tests/docker-unit-tests.sh test_74

    run_php_80_unit_tests:
        <<: *default_job_config
        steps:
            -   attach_workspace:
                    at: /home/circleci
            -   run:
                    name: Running PHP 8.0 unit tests
                    command: |
                        /home/circleci/tooling/docker-unit-tests/docker-unit-tests.sh test_80

    build_package_release:
        <<: *default_job_config
        steps:
            -   attach_workspace:
                    at: /home/circleci
            -   restore_cache:
                    <<: *composer_cache_keys
            -   restore_cache:
                    <<: *npm_cache_keys
            -   run:
                    name: Building and packaging
                    command: |
                        /home/circleci/tooling/build-tools/build_tools.sh composer -o "install --no-dev"
                        /home/circleci/tooling/build-tools/build_tools.sh grunt
                        if [ "${CIRCLE_BRANCH}" != "main" ]; then
                          /home/circleci/tooling/build-tools/build_tools.sh package_build -o "gravityview gravityview.php --include-hash"
                        else
                          /home/circleci/tooling/build-tools/build_tools.sh package_build -o "gravityview gravityview.php $([[ $(git log -n 1 | grep "\[skip release\]") ]] && echo --include-hash)"
                        fi
                        mkdir -p gravityview
                        cp -R vendor* gravityview
                        rm gravityview/vendor_prefixed/gravitykit/foundation/src/translations.js.php
                        zip -gr $(ls gravityview-*.zip) gravityview
                        mkdir .release
                        cp gravityview-*.zip .release
            -   run:
                    name: Creating a Github release
                    command: |
                        if [ "${CIRCLE_BRANCH}" == "main" ]; then
                          git config user.email "support@gravitykit.com"
                          git config user.name "GravityView - CI"
                          /home/circleci/tooling/build-tools/build_tools.sh create_release -o "gravityview.php $(ls gravityview-*.zip)"
                        fi
                    no_output_timeout: 10m
            -   run:
                    name: Notifying GravityView Release Manager
                    command: |
                        set -eo pipefail
                        if ! [[ $(git log -n 1 | grep "\[skip notify\]") ]]; then
                          /home/circleci/tooling/build-tools/build_tools.sh announce_build -o "gravityview.php $(ls gravityview-*.zip) --with-circle" || {
                              echo "Failed to notify Release Manager"
                              exit 1
                          }
                        fi
                    no_output_timeout: 5m
            -   store_artifacts:
                    path: .release
                    destination: release

workflows:
    version: 2
    test_and_package:
        jobs:
            -   prepare_test_and_build_environment:
                    <<: *context
            -   run_php_74_unit_tests:
                    <<: *test_job_config
            -   run_php_80_unit_tests:
                    <<: *test_job_config
            #      - run_acceptance_tests:
            #          <<: *context
            -   build_package_release:
                    <<: *context
                    requires:
                        - run_php_74_unit_tests
                        - run_php_80_unit_tests
#            - run_acceptance_tests
